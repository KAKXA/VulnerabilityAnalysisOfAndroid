import re

import matplotlib.dates as mdates
import matplotlib.pyplot as plt
import numpy as np

# 柱状图
# def plotSingleBar(xLabel: str, x: np.array, yLabel: str, y: np.array, title: str, saveTo: str):
#     # 横坐标
#     plt.xlabel(xLabel)

#     # 纵坐标
#     plt.ylabel(yLabel)
#     x = np.array(range(len(xLabel)))
#     plt.bar(x, y, 0.4)
#     plt.savefig(saveTo + '.jpg')

# def plotMultiBar(xLabel: str, x: np.array, yLabel: str, ys: list, barLabels: list, title: str):
#     # 横坐标
#     plt.xlabel(xLabel)

#     # 纵坐标
#     plt.ylabel(yLabel)

#     # 标题
#     plt.title(title)

#     plt.bar(x + 0.2, [i for i in range(6,1,-1)], 0.4, color='orange', label='first')
#     plt.bar(x - 0.2, [i for i in range(1, 11, 2)], 0.4, color='green', label='second')
#     # plt.legend()
#     # plt.show()
#     plt.savefig('test.jpg')


def plot(xLabel: str, x: list, yLabel: str, y: list, barWidth=0.4, title=None, xInterval=1):
    plt.xlabel(xLabel)
    plt.ylabel(yLabel)
    plt.title(title)

    for i in range(len(x)):
        if i % xInterval:
            x[i] = ""

    # make Chinese valid
    plt.rcParams["font.sans-serif"] = ["SimHei"]
    # Get original X: [0,1,2,...,n]
    pltX = np.array([i + 0.0 for i in range(len(x))])
    # paint label
    plt.bar(pltX, y, barWidth)
    # rotate string
    plt.xticks(rotation=45)
    # Substitute original X to x(made up of date str)
    plt.xticks(ticks=range(len(x)), labels=x)
    return plt


def plotDate(
    xLabel: str,
    x: list,
    yLabel: str,
    y: list,
    barWidth=0.4,
    title=None,
    xInterval=1,
    startFrom2015=True,
):
    if startFrom2015:
        x = x[34:]
        y = y[34:]

    plt.xlabel(xLabel)
    plt.ylabel(yLabel)
    plt.title(title)

    for i in range(len(x)):
        if i % xInterval:
            x[i] = ""

    # make Chinese valid
    plt.rcParams["font.sans-serif"] = ["SimHei"]
    # Get original X: [0,1,2,...,n]
    pltX = np.array([i + 0.0 for i in range(len(x))])
    # paint label
    plt.bar(pltX, y, barWidth)
    # rotate string
    plt.xticks(rotation=45)
    # Substitute original X to x(made up of date str)
    plt.xticks(ticks=range(len(x)), labels=x)
    return plt


def plotMultiDate(
    xLabel: str,
    x: list,
    yLabel,
    ys: list,
    savePath: str,
    barLabels=["type1", "type2"],
    barWidth=0.4,
    title=None,
    xInterval=1,
    startFrom2015=True,
):
    if startFrom2015:
        x = x[34:]
        for y in ys:
            y = ys[34:]

    for i in range(len(x)):
        if i % xInterval:
            x[i] = ""

    plt.xlabel(xLabel)
    plt.ylabel(yLabel)
    plt.title(title)
    # make Chinese valid
    plt.rcParams["font.sans-serif"] = ["SimHei"]
    # Get original X: [0,1,2,...,n]
    pltX = np.array([i + 0.0 for i in range(len(x))])
    # paint label
    plt.bar(pltX + (barWidth / 2), ys[0], barWidth, color="orange", label=barLabels[0])
    plt.bar(pltX - (barWidth / 2), ys[1], barWidth, color="green", label=barLabels[1])
    # rotate string
    plt.xticks(rotation=45)
    # Substitute original X to x(made up of date str)
    plt.xticks(ticks=range(len(x)), labels=x)
    # Add tags of barLabels
    plt.legend()
    # Save as JPG
    return plt


colors = ["b", "yellow", "g", "m", "c", "r", "violet", "y", "silver", "tomato"]


def plotMultiDateStackBar(
    xLabel: str,
    x: list,
    yLabel,
    ys: list,
    barLabels,
    barWidth=0.4,
    title=None,
    xInterval=1,
    startFrom2015=True,
):
    if startFrom2015:
        x = x[34:]
        for i in range(len(ys)):
            ys[i] = np.array(ys[i][34:])

    for i in range(len(x)):
        if i % xInterval:
            x[i] = ""

    plt.xlabel(xLabel)
    plt.ylabel(yLabel)
    plt.title(title)
    # make Chinese valid
    plt.rcParams["font.sans-serif"] = ["SimHei"]
    # Get original X: [0,1,2,...,n]
    pltX = np.array([i + 0.0 for i in range(len(x))])
    # paint label
    dp = np.array([0] * len(ys[0]))
    for i in range(len(ys)):
        # print(dp)
        plt.bar(pltX, ys[i], barWidth, label=barLabels[i], bottom=dp, color=colors[i])
        dp = np.add(dp, ys[i])
    # rotate string
    plt.xticks(rotation=45)
    # Substitute original X to x(made up of date str)
    plt.xticks(ticks=range(len(x)), labels=x)
    # Add tags of barLabels
    plt.legend()
    # Save as JPG
    return plt


def save(savePath, plt):
    sp = re.sub(r"\.jpg", "", savePath) + ".jpg"
    plt.savefig(sp, dpi=300, bbox_inches="tight")
    print('Save as ' + sp)
    plt.clf()


if __name__ == "__main__":
    x = ["2000/01", "2000/02", "2000/03", "2000/04"]
    ys = [np.array([3, 4, 1, 8]), np.array([2, 5, 4, 5])]
    barLabels = ["第一种", "第二种"]
    plotMultiDate("时间", x, "数量", ys, "test", barLabels=barLabels, title="标题")
