import os
import aiohttp
import requests
def getHtml(url, localPath, model='not rewrite'):
    if model == 'not rewrite' and os.path.exists(localPath):
        with open(localPath, "r", encoding="utf-8") as fp:
            html = fp.read()
            if html:
                return html

    print('Getting ' + url)
    r = requests.get(url)
    html = r.text
    with open(localPath, "w", encoding="utf-8") as fp:
        fp.write(html)
    return html

async def getHtmlAsync(url, localPath, model='not rewrite'):
    if model == 'not rewrite' and os.path.exists(localPath):
        with open(localPath, "r", encoding="utf-8") as fp:
            html = fp.read()
            if html:
                return html

    session = aiohttp.ClientSession()
    response = await(session.get(url))
    html = await response.text()
    await session.close()
    with open(localPath, "w", encoding="utf-8") as fp:
        fp.write(html)
    return html

def postHtml(url, localPath, payLoadDict, model = 'not rewrite'):
    if model == 'not rewrite' and os.path.exists(localPath):
        with open(localPath, "r", encoding="utf-8") as fp:
            html = fp.read()
            if html:
                return html

    print('Posting ' + url + ' with ' + str(payLoadDict))
    r = requests.post(url, payLoadDict)
    html = r.text
    with open(localPath, "w", encoding="utf-8") as fp:
        fp.write(html)
    return html