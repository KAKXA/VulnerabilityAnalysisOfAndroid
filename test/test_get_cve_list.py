import unittest
import os
import json

from config import *
from scraper.src.model.db import DB
from scraper.src.model.cve import CVE
from config import *
from scraper.src.get_cve_list import getCveListOfOneBulletin
from scraper.src.utils.get_cve_list_utils.get_headers_and_sub_htmls import getHeadersAndSubHtmls

class testGetCveList(unittest.TestCase):

    def testGetCveList(self):
        if not os.path.exists(resolvedAndroidBulletinJson):
            with open(resolvedAndroidBulletinJson, 'w') as fp:
                json.dump([], fp)

        with open(resolvedAndroidBulletinJson, 'r') as fp:
            resolvedBulletins = set(json.load(fp))

        db = DB(cveDbConf)

        if db.existsTable(CVE):
            db.dropTable(CVE)
        if not db.existsTable(CVE):
            db.createTable(CVE)

        try:
            with open(androidBulletinJson, 'r') as fp:
                allAndroidBulletin = json.load(fp)
                for androidBulletin in allAndroidBulletin:
                    path = androidBulletin['path']

                    print(path)
                    if path in resolvedBulletins:
                        continue

                    publishDate = androidBulletin['publishDate']
                    getCveListOfOneBulletin(path, publishDate, db)

                    resolvedBulletins.add(path)
                    with open(resolvedAndroidBulletinJson, 'w') as fp:
                        json.dump(list(resolvedBulletins), fp)

                    break
        finally:
            db.close()

    def testGetHeadersAndSubHtmls(self):
        with open(os.path.join(androidBulletinsDirectory, '2022-04-01.html'), 'r', encoding='utf-8') as fp:
            html = fp.read()
        
        headers, subHtmls = getHeadersAndSubHtmls('h2', html, pattern='details')
        




unittest.main()