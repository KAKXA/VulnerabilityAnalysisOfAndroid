import os
import re
import json
import inspect

from django.urls import conf

firstCaller = inspect.stack()[-1].filename

if re.search('test', firstCaller):
    print('Using test/config.json')
    configFile = 'test\\config.json'
else:
    print('Using config.json')
    configFile = 'config.json'

with open(configFile, 'r') as fp:
    allConf = json.load(fp)

cwd = allConf['cwd']
# Scraper #########################
resourcesPath = os.path.join(cwd, allConf['scraper']['resourcesPath'])
# Scraper #########################

# Android Bulletin ##################################################
# GET Android Bulletin CVE LIST #########################
_col2MethodName = dict()
_col2MethodName['CVE']='setCveId'
_col2MethodName['REFERENCES']='setReferences'
_col2MethodName['BUG WITH AOSP LINK']='setReferences'
_col2MethodName['BUG']='setReferences'
_col2MethodName['BUGS']='setReferences'
_col2MethodName['BUG(S)']='setReferences'
_col2MethodName['BUG(S) ']='setReferences'
_col2MethodName['BUG WITH AOSP LINKS']='setReferences'
_col2MethodName['BUGS WITH AOSP LINK']='setReferences'
_col2MethodName['BUGS WITH AOSP LINKS']='setReferences'
_col2MethodName['BUG(S) WITH AOSP LINKS']='setReferences'
_col2MethodName['BUG(S) WITH AOSP LINK']='setReferences'
_col2MethodName['TYPE']='setType'
_col2MethodName['SEVERITY']='setSeverity'
_col2MethodName['UPDATED AOSP VERSIONS']='setUpdatedAospVersions'
_col2MethodName['UPDATED VERSIONS']='setUpdatedAospVersions'
_col2MethodName['AFFECTED VERSIONS']='setUpdatedAospVersions'
_col2MethodName['COMPONENT']='setComponent' 
_col2MethodName['']=''
_col2MethodName['DATE REPORTED']=''
_col2MethodName['UPDATED GOOGLE DEVICES']=''
_col2MethodName['UPDATED NEXUS DEVICES']=''
_col2MethodName['UPDATED KERNEL VERSIONS']=''
_col2MethodName['ANDROID BUGS']='setReferences'
_col2MethodName['ANDROID BUG']='setReferences'
_col2MethodName['BUGS WITH AOSP LINKS']='setReferences'
_col2MethodName['BUGS']='setReferences'
_col2MethodName['SEVERITY*'] = 'setSeverity'
_col2MethodName['ANDROID LAUNCH VERSION'] = ''
_col2MethodName['KERNEL LAUNCH VERSION'] = ''
_col2MethodName['MINIMUM LAUNCH VERSION'] = ''
_col2MethodName['CVES'] = ''
_col2MethodName['GOOGLE DEVICE'] = ''
_col2MethodName['SECURITY PATCH LEVEL'] = ''
_col2MethodName['PREFIX'] = ''
_col2MethodName['REFERENCE'] = ''

def col2MethodName(col: str) -> str:
    return _col2MethodName[col.upper()]
cveDbConf = allConf['db']
# GET CVE LIST #########################
domain = 'https://source.android.com'
divClass = "devsite-article-body clearfix"
androidBulletinDivClass = "devsite-article-body clearfix"
androidBulletinUrl = "https://source.android.com/security/bulletin"
androidBulletinJson = os.path.join(cwd, allConf['scraper']['androidBulletinJson'])
androidBulletinHtml = os.path.join(cwd, allConf['scraper']['androidBulletinHtml'])
androidBulletinsDirectory = os.path.join(cwd, allConf['scraper']['androidBulletinsDirectory'])
resolvedAndroidBulletinJson = os.path.join(cwd, allConf['scraper']['resolvedAndroidBulletinJson'])
# Android Bulletin ##################################################

# Huawei Bulletin ###############
huaweiBulletinUrl = 'https://consumer.huawei.com/en/support/bulletin/'
huaweiBulletinsDirectory = os.path.join(cwd, allConf['scraper']['huaweiBulletinsDirectory'])
# Huawei Bulletin ###############

# CVE Details ###################
cveDetailsDirectory = os.path.join(cwd, allConf['scraper']['cveDetailsDirectory'])
cveDetailsUrl = 'https://www.cvedetails.com/cve'
# CVE Details ###################

# CVE #########################
cvePattern = '[c|C][v|V][e|E]-\d{4}-\d*'
types = {'RCE', 'EOP', 'ID', 'DOS'}
referencePrefix = {'A': 'A','QC': 'QC','M': 'M','N': 'N','B': 'B','U': 'U', 'ANDROID': 'A'}
severities = {'CRITICAL','HIGH','MODERATE','LOW','NSI'}
aospVersionPattern = '\d+[\\.\d*]*[ AND BELOW]?'
aospVersionPatternsAndSplitPatterns = [
    ['\d+[\\.\d+]*', 'NOSP'], # no need to split in this kind of pattern
    ['\d+[\\.\d+]*L', 'NOSP'], # no need to split in this kind of pattern
    ['\d+[\\.\d+]* AND \d+[\\.\d+]*', ' AND '],
    ['\d+[\\.\d+]* - \d+[\\.\d+]*', 'NOSP'], # deal with it after all versions are get
    ['\d+[\\.\d+]* AND BELOW', 'NOSP'] # deal with it after all versions are get
]
# CVE #########################
