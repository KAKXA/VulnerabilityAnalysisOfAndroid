import json
from config import *
from cleaner.src.utils.column_map import columnMap
from cleaner.src.utils.merge_two_dict import mergeAftToBef
from cleaner.src.utils.google_cveid_according_to_sveid import googleCveIdAccordingToSveId

def merge():
    afterColumnMapJsonList = []
    for metaJson, metaJsonPath in metaJsons.items():
        with open(metaJsonPath, "r") as fp:
            cveList = json.load(fp)
            for cveDict in cveList:
                betterCveDict = columnMap(metaJson, cveDict)
                afterColumnMapJsonList.append(betterCveDict)
    # with open(afterColumnMapJson, 'w') as fp:
    #     json.dump(afterColumnMapJsonList, fp)
    print(len(afterColumnMapJsonList))
    print('after column map json is done.')

    afterMergeCveMap = dict()
    sveMapToCve = dict()
    # build a map: sve->cve
    for acmJ in afterColumnMapJsonList:
        if acmJ['cveId'] and acmJ['sveId']:
            sveMapToCve[acmJ['sveId']] = acmJ['cveId']
    
    # build a map: sve->cve according to google search
    for acmJ in afterColumnMapJsonList:
        cveId = acmJ['cveId']
        sveId = acmJ['sveId']
        if not cveId and sveId not in sveMapToCve:
            cveDict = googleCveIdAccordingToSveId(sveId)
            if cveDict:
                afterMergeCveMap[cveDict['cveId']]  = cveDict
                sveMapToCve[sveId] = cveDict['cveId']

    # add to
    for acmJ in afterColumnMapJsonList:
        cveId = acmJ['cveId']
        sveId = acmJ['sveId']
        if not cveId:
            if sveId in sveMapToCve:
                acmJ['cveId'] = sveMapToCve[sveId]
                cveId = acmJ['cveId']
            else:
                # print('Failed SVE:', sveId)
                continue
        if cveId in afterMergeCveMap:
            bef = afterMergeCveMap[cveId]
            mergeAftToBef(bef, acmJ)
        else:
            afterMergeCveMap[cveId] = acmJ
    
    afterMergeCveList = list(afterMergeCveMap.values())
    print('Total CVE number:', len(afterMergeCveMap))

    return afterMergeCveList