from collections import defaultdict
from analyzer.src.utils.check_is_critical import isCritical
from analyzer.src.utils.get_all_cwe_list import getAllCweList

def analyzeCweInCritical(cveList):
	# allCnt = 0
	# allCweList = getAllCweList(cveList)
	# x = allCweList
	# cweMap = dict()
	# for i, cwe in enumerate(allCweList):
	# 	cweMap[cwe] = i
	# y = [0] * len(x)
	# key = 'cweIds'

	# for cveDict in cveList:
	# 	if isCritical(cveDict):
	# 		allCnt += 1
	# 		val = cveDict[key]
	# 		if val:
	# 			for cweId in val:
	# 				cweId = cweId.upper()
	# 				y[cweMap[cweId]] += 1

	allCnt = 0
	cweMapToCnt = defaultdict(int)
	key = 'cweIds'

	for cveDict in cveList:
		if isCritical(cveDict):
			val = cveDict[key]
			if val:
				for cweId in val:
					cweId = 'CWE' + cweId.upper()
					allCnt += 1
					cweMapToCnt[cweId] += 1

	othersCnt = 0
	cc = list(cweMapToCnt.items())
	for cwe, cnt in cc:
		if cnt / allCnt < 0.02:
			othersCnt += cnt
			cweMapToCnt.pop(cwe)
	allData = [[k, v] for k, v in cweMapToCnt.items()]
	allData.sort(key=lambda x: x[1])
	allData = [["百分比低于2%其它CWE", othersCnt]] + allData
	allData = list(zip(*allData))

	return {'cveWithCwe': allCnt, 'allData': allData}