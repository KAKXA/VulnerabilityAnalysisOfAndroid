from collections import defaultdict
from config import *
from datetime import date
from cleaner.src.utils.load import loadAll
def analyzeCveCountByMonth() -> list:
	cveList = loadAll(jsonForAnalyze)
	dateMapToCnt = defaultdict(int)
	future = date(2100, 1, 1)
	past = date(1900, 1, 1)
	minDate = future
	maxDate = past
	for cveDict in cveList:
		yearMonths = []

		yearMonths.append([cveDict['androidPublishYear'], cveDict['androidPublishMonth']])
		yearMonths.append([cveDict['pixelPublishYear'], cveDict['pixelPublishMonth']])
		yearMonths.append([cveDict['huaweiPublishYear'], cveDict['huaweiPublishMonth']])
		yearMonths.append([cveDict['samsungPublishYear'], cveDict['samsungPublishMonth']])
		yearMonths.append([cveDict['cveDetailsPublishYear'], cveDict['cveDetailsPublishMonth']])

		earliest = future
		for year, month in yearMonths:
			if year and month:
				dat = date(int(year), int(month), 1)
				earliest = min(earliest, dat)
		
		if earliest != future:
			dateMapToCnt[earliest] += 1

		minDate = max(minDate, earliest)
		maxDate = max(maxDate, earliest)
	
	dateMapToCntList = [[dat, cnt] for dat, cnt in dateMapToCnt.items()]
	dateMapToCntList.sort(key=lambda x: x[0])
	for i in dateMapToCntList:
		i[0] = i[0].strftime('%Y/%m')
		
	return list(zip(*dateMapToCntList))