'''
androidCveJson
cveId           [2012006701, 2012006702, 2013004397]
publishDate             ['2016-8-1', '2016-11-7', '2018-1-2']
securityPatchLevel              ['2016-08-05', '2016-11-05', '2018-01-05']
section         ['\nELEVATION OF PRIVILEGE VULNERABILITY IN KERNEL FILE SYSTEM', 'REMOTE CODE EXECUTION\nVULNERABILITY IN EXPAT', 'QUALCOMM CLOSED-SOURCE\nCOMPONENTS']
references              ['[["A", "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=a70b52ec1aaeaf60f4739edb1b422827cb6f3893"], ["A", "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=a70b52ec1aaeaf60f4739edb1b422827cb6f3893"]]', None, None]
type            [None, None, None]
severity                ['HIGH', 'MODERATE', 'HIGH']
updatedAospVersions             [None, '["5.1.1", "6.0", "4.4.4", "6.0.1", "5.0.2"]', None]
component               [None, None, 'CLOSED-SOURCE COMPONENT']
===============================
huaweiCveJson
cveId           ['CVE-2017-13177', 'CVE-2017-13178', 'CVE-2017-13179']
huaweiUpdateMonth               ['2018-1', '2018-1', '2018-1']
affectedHuaweiVersions          ['EMUI 11.0.0, Magic UI 4.0.0', 'EMUI 11.0.0, Magic UI 4.0.0', 'EMUI 11.0.0, Magic UI 4.0.0'] 
===============================
samsungCveJson
sveId           ['SVE-2015-4018', 'SVE-2015-5068', 'SVE-2015-5123']
cveId           ['CVE-2015-5524', 'CVE-2015-8546', 'CVE-2015-6616']
affectedVersion         ['KK(4.4) and above', 'Selected models including S6(TMO/SPR/USC only), Note5 and later which donâ€™t use Samsung FRP', 'Selected models including Galaxy S6/S6 Edge, Galaxy S6 Edge&#43;, and Galaxy Note5 with Shannon333 chipset']  
reportDate              ['May 13, 2015', 'October 22, 2015', 'November 12, 2015']
year            [2015, 2015, 2015]
month           [12, 12, 12]
===============================
cveDetailsJson
cveId           ['CVE-2022-27836', 'CVE-2022-27835', 'CVE-2022-27832']
CVSS Score              ['7.2', '9.3', '2.1']
Confidentiality Impact          ['Complete  (There is total information disclosure, resulting in all system files being revealed.)', 'Complete  (There is total information disclosure, resulting in all system files being revealed.)', 'None  (There is no impact to the confidentiality of the system.)']
Integrity Impact                ['Complete  (There is a total compromise of system integrity. There is a complete loss of system protection, resulting in the entire system being compromised.)', 'Complete  (There is a total compromise of system integrity. There is a complete loss of system protection, resulting in the entire system being compromised.)', 'None  (There is no impact to the integrity of the system)']
Availability Impact             ['Complete  (There is a total shutdown of the affected resource. The attacker can render the resource completely unavailable.)', 'Complete  (There is a total shutdown of the affected resource. The attacker can render the resource completely unavailable.)', 'Partial  (There is reduced performance or interruptions in resource availability.)']    
Access Complexity               ['Low  (Specialized access conditions or extenuating circumstances do not exist. Very little knowledge or skill is required to exploit. )', 'Medium  (The access conditions are somewhat specialized. Some preconditions must be satistified to exploit)', 'Low  (Specialized access conditions or extenuating circumstances do not exist. Very little knowledge or skill is required to exploit. )']
Authentication          ['Not required  (Authentication is not required to exploit the vulnerability.)', 'Not required  (Authentication is not required to exploit the vulnerability.)', 'Not required  (Authentication is not required to exploit the vulnerability.)']
Gained Access           ['None', 'None', 'None']
Vulnerability Type(s)           ['Directory traversal', 'Overflow', 'Denial Of Service']
CWE ID          ['22', '119', '125']
refs            [['https://security.samsungmobile.com/securityUpdate.smsb?year=2022&month=4'], ['https://security.samsungmobile.com/securityUpdate.smsb?year=2022&month=4'], ['https://security.samsungmobile.com/securityUpdate.smsb?year=2022&month=4']]
'''
from unittest.mock import patch


def columnMap(parent: str, cveDict: dict) -> :
    res = dict()
    cols = [
        'cveId',

        'androidPublishYear', # android -> publishDate
        'androidPublishMonth', # android -> publishDate
        'androidPublishDay', # android -> publishDate
        'androidDefinedBulletinSection', # android -> section
        'references', # android -> references; details -> refs
        'cpe', # android -> references
        'androidDefinedBulletinType', # android -> type
        # 'severity'
        'affectedAospVersions', # andriod -> updatedAospVersions
        'androidDefinedComponent', # android -> component

        'huaweiPublishYear',  # huawei -> huaweiUpdatedMonth
        'huaweiPublishMonth',  # huawei -> huaweiUpdatedMonth
        'affectedHuaweiVersions' # huawei -> affectedHuaweiVersions

        'sveId', # samsung -> sveId
        'samsungAffectedVersions', # samsung -> affectedVersion
        'samsungReportDay', # samsung -> reportDate
        'samsungReportMonth', # samsung -> reportDate
        'samsungReportYear', # samsung -> reportDate
        'samsungPublishYear', # samsung -> year
        'samsungPublishMonth', # samsung -> month

        'cvssScore',  # details -> CVSS Score
        'confidentialityImpact',  # details -> 'Confidentiality Impact'          
        'integrityImpact', # details -> Integrity Impact
        'availabilityImpact', # details -> Availability Impact
        'accessComplexity', # details -> Access Complexity
        'authentication', # details -> Authentication
        'gainedAccess', # details -> Gained Access
        'vulnerabilityTypes', # details -> Vulnerability Types
        'cweIds', # details -> CWE ID
    ]

    res = {k:None for k in cols}
    if parent == 'androidCveJson':
        for key, val in cveDict.items():
            if key == 'cveId':
                res[key] = val
            elif key == 'publishDate':
                if val:
                    year, month, day = val.split('-')
                    res['androidPublishYear'] = year
                    res['androidPublishMonth'] = month
                    res['androidPublishDay'] = day
    elif parent == 'huaweiCveJson':
        pass
    elif parent == 'samsungCveJson':
        keys = cveDict.keys()
    elif parent == 'cveDetailsJson':
        pass
    else:
        raise Exception()


