from analyzer.src.utils.dict_to_list_and_sort import dictToListAndSortAndZip, versionSortingKey
from config import *
from collections import defaultdict

def analyzeSamsungVersion(cveList):
	se = set()
	key = 'samsungAffectedVersions'
	cnt = 0

	verMapToCnt = defaultdict(int)
	mainVersionMapToSub = defaultdict(set)
	for cveDict in cveList:
		if cveDict[key]:
			cnt += 1
			prodVers = cveDict[key]
			for prodVer in prodVers:
				for pv in re.findall(samsungPattern, prodVer):
					if pv[samsungVersionIndex]:
						if 'x' not in pv[samsungVersionIndex]:
							mainVersionMapToSub[pv[samsungVersionIndex].split('.')[0]].add(pv[samsungVersionIndex])
						verMapToCnt[pv[samsungVersionIndex]] += 1

	keyWithX = []
	for vk, vc in verMapToCnt.items():
		if 'x' in vk:
			keyWithX.append([vk, vc])
	for kwx, kwxc in keyWithX:
		verMapToCnt.pop(kwx)
		mainVer = kwx.split('.')[0]
		for subVer in mainVersionMapToSub[mainVer]:
			verMapToCnt[subVer] += kwxc

	verMapToCntList = dictToListAndSortAndZip(verMapToCnt, key=versionSortingKey)
	return {'countOfCveThatAffectSamsungProducts': cnt, 'data': verMapToCntList}
